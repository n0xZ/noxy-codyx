// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}


model Image{
  id String @id @default(cuid())
  src String
  fileId String
  width Int
  height Int
  recommendation Recommendation @relation(fields: [id], references: [id],onDelete: Cascade, onUpdate: Cascade)
   
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isContentPublic Boolean @default(false)
  accounts      Account[]
  sessions      Session[]
  recommendations Recommendation[]
}

model Recommendation {
  id        String   @id @unique @default(cuid())
  name      String
  note      String
img Image?
  createdAt DateTime @default(now())
  genre    Genre
  status Status @default(IN_PROGRESS)
  author    User     @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  rating Int?

}

enum Status{
  IN_PROGRESS
  FINISHED
}
enum Genre {
  MOVIE
  SERIE
  ANIME
  MANGA
  NOVEL
  OTHER
}
